Description: Codebuild resources

Parameters:
  CodeBuildServiceRoleArn:
    Description: Arn of the CodeBuild service role
    Default: $iam-CodeBuildServiceRoleArn
    Type: String

  PrivateSubnets:
    Description: The list of Private SubnetIds in your Virtual Private Cloud (VPC)
    Type: List<AWS::EC2::Subnet::Id>

  RepositoryName:
    Description: Name of the repository
    Type: String

  StackPrefix:
    Description: Prefix for stack resources
    Type: String

  VpcEndpointClientsSecurityGroupId:
    Description: Security group for the VPC endpoint clients
    Type: String

Conditions:
  CodeBuildServiceRoleArnIsImported:
    !And [ 
      !Not [ !Equals [ !Ref CodeBuildServiceRoleArn, "" ] ],
      !Equals [ !Select [ 0, !Split [ "$", !Ref CodeBuildServiceRoleArn ] ], "" ]
    ]

Resources:
  ComputeCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${StackPrefix}-DeployCompute"
      Description: Build EC2 resources for Web Servers using CloudFormation and Ansible
      Source:
        BuildSpec: buildspec/compute.yml
        GitCloneDepth: 1
        GitSubmodulesConfig:
          FetchSubmodules: false
        InsecureSsl: false
        Location: !Sub "https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/${RepositoryName}"
        Type: CODECOMMIT
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Type: NO_CACHE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole: 
        !If 
          - CodeBuildServiceRoleArnIsImported
          - Fn::ImportValue: 
              !Join [ "-", [ !Sub "${StackPrefix}", !Select [ 1, !Split [ "$", !Ref CodeBuildServiceRoleArn ] ] ] ]
          - !Join [ "-", [ !Sub "${StackPrefix}", "CodeBuildServiceRole" ] ]
      TimeoutInMinutes: 60
      QueuedTimeoutInMinutes: 480
      VpcConfig:
        SecurityGroupIds:
          - !Ref VpcEndpointClientsSecurityGroupId
        Subnets: !Ref PrivateSubnets
        VpcId: 
          Fn::ImportValue:
            !Sub "${StackPrefix}-network-VpcId"
      EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
      BadgeEnabled: true
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !ImportValue 
            Fn::Sub: "${StackPrefix}-codebuild-CloudWatchLogGroup"
          StreamName: cfn-compute
        S3Logs:
          Status: DISABLED
          EncryptionDisabled: false
      Visibility: PRIVATE

  WebConfigCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${StackPrefix}-ConfigureWeb"
      Description: Configure web servers using ansible
      Source:
        BuildSpec: buildspec/web_config.yml
        GitCloneDepth: 1
        GitSubmodulesConfig:
          FetchSubmodules: false
        InsecureSsl: false
        Location: !Sub "https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/${RepositoryName}"
        Type: CODECOMMIT
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Type: NO_CACHE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole: 
        !If 
          - CodeBuildServiceRoleArnIsImported
          - Fn::ImportValue: 
              !Join [ "-", [ !Sub "${StackPrefix}", !Select [ 1, !Split [ "$", !Ref CodeBuildServiceRoleArn ] ] ] ]
          - !Join [ "-", [ !Sub "${StackPrefix}", "CodeBuildServiceRole" ] ]
      TimeoutInMinutes: 60
      VpcConfig:
        SecurityGroupIds:
          - !Ref VpcEndpointClientsSecurityGroupId
        Subnets: !Ref PrivateSubnets
        VpcId: 
          Fn::ImportValue:
            !Sub "${StackPrefix}-network-VpcId"
      QueuedTimeoutInMinutes: 480
      EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
      BadgeEnabled: true
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !ImportValue 
            Fn::Sub: "${StackPrefix}-codebuild-CloudWatchLogGroup"
          StreamName: web-config
        S3Logs:
          Status: DISABLED
          EncryptionDisabled: false
      Visibility: PRIVATE

  TestCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${StackPrefix}-Test"
      Description: Test the final environment and deployed applications
      Source:
        BuildSpec: buildspec/integration_tests.yml
        GitCloneDepth: 1
        GitSubmodulesConfig:
          FetchSubmodules: false
        InsecureSsl: false
        Location: !Sub "https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/${RepositoryName}"
        Type: CODECOMMIT
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Type: NO_CACHE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole: 
        !If 
          - CodeBuildServiceRoleArnIsImported
          - Fn::ImportValue: 
              !Join [ "-", [ !Sub "${StackPrefix}", !Select [ 1, !Split [ "$", !Ref CodeBuildServiceRoleArn ] ] ] ]
          - !Join [ "-", [ !Sub "${StackPrefix}", "CodeBuildServiceRole" ] ]
      TimeoutInMinutes: 60
      QueuedTimeoutInMinutes: 480
      VpcConfig:
        SecurityGroupIds:
          - !Ref VpcEndpointClientsSecurityGroupId
        Subnets: !Ref PrivateSubnets
        VpcId: 
          Fn::ImportValue:
            !Sub "${StackPrefix}-network-VpcId"
      EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
      BadgeEnabled: true
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !ImportValue 
            Fn::Sub: "${StackPrefix}-codebuild-CloudWatchLogGroup"
          StreamName: ansible-test
        S3Logs:
          Status: DISABLED
          EncryptionDisabled: false
      Visibility: PRIVATE
