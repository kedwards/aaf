Description: AWS API Gateway with Lambda Integration

Parameters:
  LambdaFunctionName:
    Type: "String"
    AllowedPattern: "^[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+$"
    Description: Lambda function name. (Recommend to keep default)
    Default: "lambda-api"

  ApiStageName:
    Type: "String"
    Description: API Staging Name. (Recommend to keep default)
    Default: "v1"

  ApiResourcePath:
    Type: "String"
    Description: Resource Path for API.
    Default: "user"

Resources:
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      ApiKeySourceType: HEADER
      Description: An API Gateway for Lambda APIs
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: !Join ["", [{"Ref": "AWS::StackName"}, "-api"]]

  ProxyResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: !Ref ApiResourcePath

  ProxyResourceANY:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ResourceId: !Ref ProxyResource
      HttpMethod: GET
      ApiKeyRequired: true
      AuthorizationType: NONE
      OperationName: !Ref ApiResourcePath
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations'

  ApiGatewayModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: 'application/json'
      RestApiId: !Ref ApiGatewayRestApi
      Schema: {}

  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref ApiGatewayDeployment
      Description: Lambda API Stage v1
      RestApiId: !Ref ApiGatewayRestApi
      StageName: !Ref ApiStageName

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ProxyResourceANY
    Properties:
      Description: Lambda API Deployment
      RestApiId: !Ref ApiGatewayRestApi

  LambdaFunction:
    Type: AWS::Lambda::Function
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - W3002
    Properties:
      Code: lambdas/lambda-user
      Description: API User Lambda function
      FunctionName: !Ref LambdaFunctionName
      Handler: main
      MemorySize: 512
      Role: !ImportValue LambdaIamRole.Arn
      Runtime: go1.x
      Timeout: 30

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: 'apigateway.amazonaws.com'

  LambdaLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaFunctionName}"
      RetentionInDays: 3

  ApiKey: 
    Type: AWS::ApiGateway::ApiKey
    Properties: 
      Name: !Join ["", [{"Ref": "AWS::StackName"}, "-apikey"]]
      Description: !Join ["", [{"Ref": "AWS::StackName"}, "api key"]]
      Enabled: true
      GenerateDistinctId: false

  ApiUsagePlan:
    Type: "AWS::ApiGateway::UsagePlan"
    DependsOn: ApiGatewayStage
    Properties:
      ApiStages: 
      - ApiId: !Ref ApiGatewayRestApi
        Stage: !Ref ApiStageName
      Description: !Join [" ", [{"Ref": "AWS::StackName"}, "usage plan"]]
      UsagePlanName: !Join ["", [{"Ref": "AWS::StackName"}, "-usage-plan"]]

  ApiUsagePlanKey:
    Type: "AWS::ApiGateway::UsagePlanKey"
    Properties:
      KeyId: !Ref ApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref ApiUsagePlan

Outputs:
  ApiGatewayRestApiId:
    Description: The ID of the API Gateway
    Value: !Ref ApiGatewayRestApi
        Export:
      Name: !Join ["-", [{Ref: "AWS::StackName"}, "ApiGatewayRestApiId"]]

  ApiGatewayRestApiRootResourceId:
    Description: The root resource ID of the API Gateway
    Value: !GetAtt ApiGatewayRestApi.RootResourceId
    Export:
      Name: !Join ["-", [{Ref: "AWS::StackName"}, "ApiGatewayRestApiRootResourceId"]]

  ApiGatewayRestApiRootResourceUrl:
    Description: The root resource URL of the API Gateway
    Value: !Sub 'https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}/'
    Export:
      Name: !Join ["-", [{Ref: "AWS::StackName"}, "ApiGatewayRestApiRootResourceUrl"]]

  ApiGatewayRestApiUrl:
    Description: The URL of the API Gateway
    Value: !Sub 'https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}/${ApiResourcePath}/'
    Export:
      Name: !Join ["-", [{Ref: "AWS::StackName"}, "ApiGatewayRestApiUrl"]]

  ApiGatewayRestApiUrlWithKey:
    Description: The URL of the API Gateway with key
    Value: !Sub 'https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}/${ApiResourcePath}/?apikey=${ApiKey}'
