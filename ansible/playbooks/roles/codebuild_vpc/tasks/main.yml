---
- name: Set stack name
  ansible.builtin.set_fact:
    endpoints_stack_name: "{{ stack_prefix }}-endpoints"
    network_stack_name: "{{ stack_prefix }}-network"

- name: Get facts about network stack
  amazon.aws.cloudformation_info:
    stack_name: "{{ item }}"
  loop:
    - "{{ network_stack_name }}"
    - "{{ endpoints_stack_name }}"
  register: stack_facts

- name: Set stack facts
  ansible.builtin.set_fact:
    network_facts: "{{ stack_facts.results[0].cloudformation[network_stack_name].stack_outputs }}"
    endpoints_facts: "{{ stack_facts.results[1].cloudformation[endpoints_stack_name].stack_outputs }}"

- name: Get default security group
  ansible.builtin.command: "aws ec2 describe-security-groups --region {{ aws_region }} --filters Name=vpc-id,Values={{ network_facts.VpcId }} Name=group-name,Values=default --query 'SecurityGroups[0].GroupId' --output text"
# aws ec2 describe-security-groups --query "SecurityGroups[?VpcId=='vpc-0b5b40b6d9c8b53f6' && GroupName=='default'].GroupId" --output text
  register: default_security_group_facts

- name: Create codebuild resources
  amazon.aws.cloudformation:
    stack_name: "{{ stack_prefix }}-codebuild-vpc"
    state: present
    region: "{{ aws_region }}"
    template: "{{ cf_dir }}/codebuild_vpc.aws.yml"
    create_changeset: "{{ create_changeset }}"
    template_parameters:
      DefaultSecurityGroupId: "{{ default_security_group_facts.stdout }}"
      PrivateSubnets: "{{ network_facts.PrivateSubnets }}"
      RepositoryName: "{{ repository_name }}"
      StackPrefix: "{{ stack_prefix }}"
      VpcEndpointClientsSecurityGroupId: "{{ endpoints_facts.VpcEndpointClientsSecurityGroupId }}"
